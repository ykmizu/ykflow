import numpy as np
import os, sys

def main(argv):
    mach = float(argv[1])
    alfa =  float(argv[2])
    reynolds = float(argv[3])
    # print(os.getcwd())

    # folder = "naca_M_"+str(int(mach*10))+"_A_"+ str(alfa)+"_Re_"+\
    #     str(reynolds)

    # os.mkdir(folder)
    # os.system("cp naca.inp naca.job naca.geom nacatri_fine.gri "+ str(folder))
    # os.chdir(os.getcwd()+"/"+folder)
    #--------------------------------------------------------------------------
    # Calcualte Parameters
    #--------------------------------------------------------------------------
    finalTime = 25.6
    gamma = 1.4
    pressure = 1.0/gamma*(1/mach)*(1/mach)
    energy = pressure/(gamma-1)+1.0/2.0
    xvel = np.cos(alfa*np.pi/180)
    yvel = np.sin(alfa*np.pi/180)
    viscosity = 1.0/reynolds
    #--------------------------------------------------------------------------
    # Print out the equation file
    #--------------------------------------------------------------------------
    #inputWrite = open("naca.eqn", "w+")
    with open("naca.eqn", "w+") as inputWrite:
        inputWrite.write("\n")
        inputWrite.write("EqnSetLibrary = libCompressibleNS.so\n")
        inputWrite.write("\n")
        inputWrite.write("#------------------------------#\n")
        inputWrite.write("# Equation-specific parameters #\n")
        inputWrite.write("#------------------------------#\n")
        inputWrite.write("\n")
        inputWrite.write("STARTBLOCK PARAM\n")
        inputWrite.write("\n")
        inputWrite.write("ConstViscosity = True\n")
        inputWrite.write("SpecificHeatRatio = "+str(gamma)+"\n")
        inputWrite.write("GasConstant = 0.4\n")
        inputWrite.write("Viscosity = "+str(viscosity)+"\n")
        inputWrite.write("\n")
        inputWrite.write("ENDBLOCK\n")
        inputWrite.write("\n")
        inputWrite.write("\n")
        inputWrite.write("#----------------#\n")
        inputWrite.write("# Residual terms #\n")
        inputWrite.write("#----------------#\n")
        inputWrite.write("\n")
        inputWrite.write("STARTBLOCK RESTERM\n")
        inputWrite.write("\n")
        inputWrite.write("nResTerm = 2\n")
        inputWrite.write("\n")
        inputWrite.write("TermType = Convection\n")
        inputWrite.write("InteriorFlux = Standard\n")
        inputWrite.write("FluxFunction = Roe\n")
        inputWrite.write("\n")
        inputWrite.write("TermType = Diffusion\n")
        inputWrite.write("\n")
        inputWrite.write("ENDBLOCK\n")
        inputWrite.write("\n")
        inputWrite.write("#---------------------#\n")
        inputWrite.write("#  Initial condition  #\n")
        inputWrite.write("#---------------------#\n")
        inputWrite.write("\n")
        inputWrite.write("STARTBLOCK IC\n")
        inputWrite.write("\n")
        inputWrite.write("ICType = FullState\n")
        inputWrite.write("Data = 1.0 "+str(xvel)+" "+ str(yvel)+" "+ str(energy)+"\n")
        inputWrite.write("\n")
        inputWrite.write("ENDBLOCK\n")
        inputWrite.write("\n")
        inputWrite.write("#-----------------------#\n")
        inputWrite.write("#  Boundary conditions  #\n")
        inputWrite.write("#-----------------------#\n")
        inputWrite.write("\n")
        inputWrite.write("STARTBLOCK BC\n")
        inputWrite.write("\n")
        inputWrite.write("nBC = 3\n")
        inputWrite.write("\n")
        inputWrite.write("BFGTitle = Airfoil\n")
        inputWrite.write("BCType = NoSlipHeat\n")
        inputWrite.write("Data = 0.0\n")
        inputWrite.write("\n")
        inputWrite.write("BFGTitle = Inflow\n")
        inputWrite.write("BCType = FullState\n")
        inputWrite.write("Data = 1.0 "+str(xvel)+" "+ str(yvel)+" "+ str(energy)+"\n")
        inputWrite.write("\n")
        inputWrite.write("BFGTitle = Outflow\n")
        inputWrite.write("BCType = FullState\n")
        inputWrite.write("Data = 1.0 "+str(xvel)+" "+ str(yvel)+" "+ str(energy)+"\n")
        inputWrite.write("\n")
        inputWrite.write("ENDBLOCK\n")
        inputWrite.write("\n")
        inputWrite.write("#---------#\n")
        inputWrite.write("# Outputs #\n")
        inputWrite.write("#---------#\n")
        inputWrite.write("\n")
        inputWrite.write("STARTBLOCK OUTPUT\n")
        inputWrite.write("\n")
        inputWrite.write("nOutput = 4\n")
        inputWrite.write("\n")
        inputWrite.write("OutputName = Drag\n")
        inputWrite.write("OutputType = BoundaryIntegral\n")
        inputWrite.write("UsesFlux = True\n")
        inputWrite.write("FluxComponentNames = XMomentum YMomentum\n")
        inputWrite.write("FluxComponentWeights = "+str(xvel)+" "+str(yvel)+"\n")
        inputWrite.write("BFGTitles = Airfoil\n")
        inputWrite.write("\n")
        inputWrite.write("OutputName = Lift\n")
        inputWrite.write("OutputType = BoundaryIntegral\n")
        inputWrite.write("UsesFlux = True\n")
        inputWrite.write("FluxComponentNames = XMomentum YMomentum\n")
        inputWrite.write("FluxComponentWeights = "+str(-yvel)+" "+str(xvel)+"\n")
        inputWrite.write("BFGTitles = Airfoil\n")
        inputWrite.write("\n")
        inputWrite.write("OutputName = LiftIntegral\n")
        inputWrite.write("OutputType = BoundaryIntegral\n")
        inputWrite.write("UsesFlux = True\n")
        inputWrite.write("FluxComponentNames = XMomentum YMomentum\n")
        inputWrite.write("FluxComponentWeights = "+str(-yvel)+" "+str(xvel)+"\n")
        inputWrite.write("BFGTitles = Airfoil\n")
        inputWrite.write("TimeNorm = Integral\n")
        inputWrite.write("StartTime = 0\n")
        inputWrite.write("EndTime = "+str(finalTime)+"\n")
        inputWrite.write("\n")
        inputWrite.write("OutputName = DragIntegral\n")
        inputWrite.write("OutputType = BoundaryIntegral\n")
        inputWrite.write("UsesFlux = True\n")
        inputWrite.write("FluxComponentNames = XMomentum YMomentum\n")
        inputWrite.write("FluxComponentWeights = "+str(xvel)+" "+str(yvel)+"\n")
        inputWrite.write("BFGTitles = Airfoil\n")
        inputWrite.write("TimeNorm = Integral\n")
        inputWrite.write("StartTime = 0\n")
        inputWrite.write("EndTime = "+str(finalTime)+"\n")
        inputWrite.write("\n")
        inputWrite.write("ENDBLOCK\n")


#    os.system("../../../../../bin/yk_STLSPG -job naca -input naca")

if __name__ == '__main__':

    main(sys.argv)
